{"version":3,"sources":["../botsrc/bot/commands.registrar.ts"],"names":[],"mappings":";;AACA,+BAA4B;AAUf,QAAA,sBAAsB,GAAG,CAAC,MAAsB,EAAE,EAAE;IAC7D,MAAM,CAAC,QAAQ;SACV,oBAAoB,EAAE;SACtB,cAAc,CAAC;QACZ,CAAC,sBAAsB,EAAE,iCAAiC,CAAC;QAC3D,CAAC,MAAM,EAAE,kBAAkB,CAAC;KAC/B,CAAC;SACD,uBAAuB,CAAC;QACrB,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,IAAI;QAIV,KAAK,EAAE,KAAK;QACZ,YAAY,EAAE,KAAK;QACnB,IAAI,EAAE,IAAI;KACb,CAAC;SACD,kBAAkB,CAAC,WAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC","file":"commands.registrar.js","sourcesContent":["import { CommandoClient } from \"discord.js-commando\";\r\nimport { join } from \"path\";\r\n\r\n/**\r\n * will register all the groups used in the commando framework.\r\n * \r\n * be careful adding groups and update all commands accordingly if you update\r\n * the id in a group (which you shouldnt do often thats why theres a label)\r\n * \r\n * @param client the bot client\r\n */\r\nexport const setBotCommandGroupsFor = (client: CommandoClient) => {\r\n    client.registry\r\n        .registerDefaultTypes()\r\n        .registerGroups([\r\n            ['applicant-management', 'Manage Your Server Applications'],\r\n            ['util', 'Helpful Commands'],\r\n        ])\r\n        .registerDefaultCommands({\r\n            prefix: false,\r\n            ping: true,\r\n\r\n            // set this to false during production to aviod\r\n            // getting hella hacked\r\n            eval_: false,\r\n            commandState: false,\r\n            help: true\r\n        })\r\n        .registerCommandsIn(join(__dirname, './commands'));\r\n};"]}